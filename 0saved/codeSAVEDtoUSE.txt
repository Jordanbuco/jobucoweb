HEAD PARA INCLUIR SCRIPTS ALPINEJS Y OTROS
-----------------------------------------------------------------------------

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" type="text/css" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css">

-----------------------------------------------------------------------------
A VECES PARA USAR SCRIPTS
-----------------------------------------------------------------------------


    <script src="https://cdn.tailwindcss.com"></script> // TAILWIND CSS


-----------------------------------------------------------------------------



div que quito por codigo OK, sustitucion img por video en bucle de fondo del menu
<div class="scrollbar" id="style-1">
            <!--DIV VIEJO GUARDADO--><!--<div class="logo">
                <img src="https://raw.githubusercontent.com/Jordanbuco/Drive/main/jobuco/bg-edited/glow.png" alt="">
            </div>-->


para abrir las paginas desde el menu, codigo index modificada una parte:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <nav class="main-menu">
        <div class="settings"></div>
        <div class="scrollbar" id="style-1">
            <div class="logo">
                <video autoplay muted loop style="width: 320px; height: 100vh;">
                    <source src="media/video-bg-menu.mov" type="video/mp4">
                </video>
            </div>
            <ul>
                <li><a href="#" onclick="loadContent('com/home.html')"><i class="fa fa-home fa-lg"></i><span class="nav-text">Home</span></a></li>
                <li><a href="#" onclick="loadContent('com/login.html')"><i class="fa fa-user fa-lg"></i><span class="nav-text">Login</span></a></li>
                <li><a href="#" onclick="loadContent('com/contact.html')"><i class="fa fa-envelope-o fa-lg"></i><span class="nav-text">Contact</span></a></li>
                <!-- Añadir más elementos del menú según sea necesario -->
            </ul>
        </div>
    </nav>

    <script>
        // Mantén la funcionalidad del hover expandido en el menú
        document.addEventListener('DOMContentLoaded', function() {
            const menu = document.querySelector('.main-menu');
            menu.addEventListener('mouseover', function() {
                menu.classList.add('expanded');
            });
            menu.addEventListener('mouseout', function() {
                menu.classList.remove('expanded');
            });
        });
    </script>
</body>

</html>



INDEX DE CARDS GUARDADO ANTES DE MODIFICACION CHAPY 

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Interactive Cards</title>
  <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
  <style>
    body {
      margin: 40px 0;
      font-family: "Raleway", sans-serif;
      font-size: 14px;
      font-weight: 500;
      background-color: #BCAAA4;
      -webkit-font-smoothing: antialiased;
    }

    .title {
      font-family: "Raleway", sans-serif;
      font-size: 24px;
      font-weight: 700;
      color: #5D4037;
      text-align: center;
    }

    p {
      line-height: 1.5em;
    }

    .container {
      padding: 40px 80px;
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
    }

    .card-wrap {
      margin: 10px;
      transform: perspective(800px);
      transform-style: preserve-3d;
      cursor: pointer;
    }

    .card {
      position: relative;
      flex: 0 0 240px;
      width: 240px;
      height: 320px;
      background-color: #333;
      overflow: hidden;
      border-radius: 10px;
      box-shadow: rgba(0, 0, 0, 0.66) 0 30px 60px 0, inset #333 0 0 0 5px, inset rgba(255, 255, 255, 0.5) 0 0 0 6px;
      transition: 1s cubic-bezier(0.445, 0.05, 0.55, 0.95);
    }

    .card-bg {
      opacity: 0.5;
      position: absolute;
      top: -20px; left: -20px;
      width: 100%;
      height: 100%;
      padding: 20px;
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
      transition: 1s cubic-bezier(0.445, 0.05, 0.55, 0.95), opacity 5s cubic-bezier(0.445, 0.05, 0.55, 0.95);
      pointer-events: none;
    }

    .card-info {
      padding: 20px;
      position: absolute;
      bottom: 0;
      color: #fff;
      transform: translateY(40%);
      transition: 0.6s 1.6s cubic-bezier(0.215, 0.61, 0.355, 1);
    }

    .card-info h1 {
      font-family: "Playfair Display", serif;
      font-size: 36px;
      font-weight: 700;
      text-shadow: rgba(0, 0, 0, 0.5) 0 10px 10px;
    }

    .card-info p {
      opacity: 0;
      text-shadow: rgba(0, 0, 0, 1) 0 2px 3px;
      transition: 0.6s 1.6s cubic-bezier(0.215, 0.61, 0.355, 1);
    }

    .card-wrap:hover .card-info {
      transform: translateY(0);
    }

    .card-wrap:hover .card-info p {
      opacity: 1;
    }

    .card-wrap:hover .card-bg {
      opacity: 0.8;
    }

    .card-wrap:hover .card {
      box-shadow: rgba(255, 255, 255, 0.2) 0 0 40px 5px, rgba(255, 255, 255, 1) 0 0 0 1px, rgba(0, 0, 0, 0.66) 0 30px 60px 0, inset #333 0 0 0 5px, inset white 0 0 0 6px;
    }
  </style>
</head>
<body>

  <h1 class="title">Hover over the cards</h1>

  <div id="app" class="container">
    <card data-image="https://images.unsplash.com/photo-1479660656269-197ebb83b540?dpr=2&auto=compress,format&fit=crop&w=1199&h=798&q=80&cs=tinysrgb&crop=">
      <h1 slot="header">Canyons</h1>
      <p slot="content">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
    </card>
    <card data-image="https://images.unsplash.com/photo-1479659929431-4342107adfc1?dpr=2&auto=compress,format&fit=crop&w=1199&h=799&q=80&cs=tinysrgb&crop=">
      <h1 slot="header">Beaches</h1>
      <p slot="content">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
    </card>
    <card data-image="https://images.unsplash.com/photo-1479644025832-60dabb8be2a1?dpr=2&auto=compress,format&fit=crop&w=1199&h=799&q=80&cs=tinysrgb&crop=">
      <h1 slot="header">Trees</h1>
      <p slot="content">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
    </card>
    <card data-image="https://images.unsplash.com/photo-1479621051492-5a6f9bd9e51a?dpr=2&auto=compress,format&fit=crop&w=1199&h=811&q=80&cs=tinysrgb&crop=">
      <h1 slot="header">Lakes</h1>
      <p slot="content">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
    </card>
  </div>

  <script>
    Vue.component('card', {
      template: `
        <div class="card-wrap"
          @mousemove="handleMouseMove"
          @mouseenter="handleMouseEnter"
          @mouseleave="handleMouseLeave"
          ref="card">
          <div class="card" :style="cardStyle">
            <div class="card-bg" :style="[cardBgTransform, cardBgImage]"></div>
            <div class="card-info">
              <slot name="header"></slot>
              <slot name="content"></slot>
            </div>
          </div>
        </div>`,
      mounted() {
        this.width = this.$refs.card.offsetWidth;
        this.height = this.$refs.card.offsetHeight;
      },
      props: ['dataImage'],
      data: () => ({
        width: 0,
        height: 0,
        mouseX: 0,
        mouseY: 0,
        mouseLeaveDelay: null
      }),
      computed: {
        mousePX() {
          return this.mouseX / this.width;
        },
        mousePY() {
          return this.mouseY / this.height;
        },
        cardStyle() {
          const rX = this.mousePX * 30;
          const rY = this.mousePY * -30;
          return {
            transform: `rotateY(${rX}deg) rotateX(${rY}deg)`
          };
        },
        cardBgTransform() {
          const tX = this.mousePX * -40;
          const tY = this.mousePY * -40;
          return {
            transform: `translateX(${tX}px) translateY(${tY}px)`
          };
        },
        cardBgImage() {
          return {
            backgroundImage: `url(${this.dataImage})`
          };
        }
      },
      methods: {
        handleMouseMove(e) {
          this.mouseX = e.pageX - this.$refs.card.offsetLeft - this.width / 2;
          this.mouseY = e.pageY - this.$refs.card.offsetTop - this.height / 2;
        },
        handleMouseEnter() {
          clearTimeout(this.mouseLeaveDelay);
        },
        handleMouseLeave() {
          this.mouseLeaveDelay = setTimeout(() => {
            this.mouseX = 0;
            this.mouseY = 0;
          }, 1000);
        }
      }
    });

    new Vue({
      el: '#app'
    });
  </script>

</body>
</html>



CUADRICULA DE FOTOS CREADA PRINCIPALMENTE PARA absolute
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Grid Gallery</title>
    <script src="https://cdn.jsdelivr.net/npm/alpinejs" defer></script>
</head>
<body>
    <section>
        <div class="grid-container">
            <!-- Cada elemento de la cuadrícula -->
            <div class="grid-item large" x-data="{ open: false }" @click="open = !open">
                <a href="https://example.com/link1">
                    <img src="media/1jo.jpg" alt="Image 1">
                    <div class="overlay">
                        <p x-show="open" x-transition>This is Image 1</p>
                    </div>
                </a>
            </div>

            <div class="grid-item wide" x-data="{ open: false }" @click="open = !open">
                <a href="https://example.com/link2">
                    <img src="https://via.placeholder.com/200" alt="Image 2">
                    <div class="overlay">
                        <p x-show="open" x-transition>This is Image 2</p>
                    </div>
                </a>
            </div>

            <div class="grid-item" x-data="{ open: false }" @click="open = !open">
                <a href="https://example.com/link3">
                    <img src="https://via.placeholder.com/200" alt="Image 3">
                    <div class="overlay">
                        <p x-show="open" x-transition>This is Image 3</p>
                    </div>
                </a>
            </div>

            <div class="grid-item" x-data="{ open: false }" @click="open = !open">
                <a href="https://example.com/link4">
                    <img src="https://via.placeholder.com/200" alt="Image 4">
                    <div class="overlay">
                        <p x-show="open" x-transition>This is Image 4</p>
                    </div>
                </a>
            </div>

            <!-- Añade más imágenes si es necesario -->
        </div>
    </section>
</body>
</html>



